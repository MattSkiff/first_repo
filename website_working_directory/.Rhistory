conditioning.df <- read.csv("Conditioned_Reinforcer_session1.csv")
table(conditioning.df$Session.No.)
xtabs(data = conditioning.df)
xtabs(data = conditioning.df,Sucess ~ Session.No. )
xtabs(data = conditioning.df,Result ~ Session.No. )
xtabs(data = conditioning.df,Result ~ Session.No.)
table(conditioning.df$Session.No.)
table(conditioning.df$Result)
View(conditioning.df)
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result))
library("ggplot2", lib.loc="~/R/win-library/3.4")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = "logit")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = "lm")
apply(conditioning.df$Result == 1,conditioning.df$Result <- 1)
apply(If(conditioning.df$Result == 1) {conditioning.df$Result <- 1})
conditioning.df$Result[conditioning.df$Result == "YES"] <- 1
conditioning.df$Result[conditioning.df$Result == "NO"] <- 0
conditioning.df <- read.csv("Conditioned_Reinforcer_session1.csv")
conditioning.df$Result <- as.character(conditioning.df$Result)
conditioning.df$Result[conditioning.df$Result == "YES"] <- 1
conditioning.df$Result[conditioning.df$Result == "NO"] <- 0
conditioning.df$Result <- as.numeric(conditioning.df$Result)
View(conditioning.df)
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(x = 42)
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(xintercept = 42)
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(xintercept = 42,color = "red")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(xintercept = 42,color = "red",width = 2)
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(xintercept = 42,color = "red",thick = 2)
args(geom_vline)
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light()
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method") + ylim(0,1)
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method") + ylim(c(0,1))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = "logit") + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = "logistic") + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = "glm") + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = "LOESS") + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = LOESS) + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result)) + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'LOESS') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'logit') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'glm::logit') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method")
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method") + xlim(0,100)
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid",ylab = "Result, 1 = Y, 0 = N", xlab = "Run") + xlim(0,100) + geom_points(mapping = aes(x = Run.No., y = Result))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid",y = "Result, 1 = Y, 0 = N", x = "Run") + xlim(0,100) + geom_points(mapping = aes(x = Run.No., y = Result))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid",ylabel = "Result, 1 = Y, 0 = N", x = "Run") + xlim(0,100) + geom_points(mapping = aes(x = Run.No., y = Result))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid",ylabel = "Result, 1 = Y, 0 = N", xlab = c("Run")) + xlim(0,100) + geom_points(mapping = aes(x = Run.No., y = Result))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Result, 1 = Y, 0 = N") + xlab = c("Run") + xlim(0,100) + geom_points(mapping = aes(x = Run.No., y = Result))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Result, 1 = Y, 0 = N") + xlab = c("Run") + xlim(0,100) + geom_point(mapping = aes(x = Run.No., y = Result))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Result, 1 = Y, 0 = N") + xlab("Run") + xlim(0,100) + geom_point(mapping = aes(x = Run.No., y = Result))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid and jittered") + ylab("Result, 1 = Y, 0 = N") + xlab("Run") + xlim(0,100) + geom_jitter(mapping = aes(x = Run.No., y = Result))
ggplot(data = conditioning.df) + geom_smooth(mapping = aes(x = Run.No.,y = Result),method = 'loess') + geom_vline(xintercept = 42,color = "red",width = 2) + theme_light() + labs(title = "Plot of Trial result versus Run No using LOESS",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Result, 1 = Y, 0 = N") + xlab("Run") + xlim(0,100) + geom_point(mapping = aes(x = Run.No., y = Result))
library(dplyr)
library(dlpyr)
library(dplyr)
install.packages(dplyr)
"dplyr"
install.packages("dplyr")
library(dplyre)
library(dplyr)
conditioning.df$Block_probability <- conditioning.df$Block_probability
for(i in 1:unique(conditioning.df$Block.No.)) {
conditioning.df$Block_probability <- mean(conditioning.df$Result[conditioning.df$Block_probability == i])
}
conditioning.df$Result[conditioning.df$Block_probability == 1]
for(i in 1:unique(conditioning.df$Block.No.)) {
conditioning.df$Block_probability <- mean(conditioning.df$Result[conditioning.df$Block.No. == i])
}
for(i in 1:len(unique(conditioning.df$Block.No.))) {
conditioning.df$Block_probability <- mean(conditioning.df$Result[conditioning.df$Block.No. == i])
}
for(i in 1:length(unique(conditioning.df$Block.No.))) {
conditioning.df$Block_probability <- mean(conditioning.df$Result[conditioning.df$Block.No. == i])
}
conditioning.df$Result[conditioning.df$Block.No. = 2]
conditioning.df$Result[conditioning.df$Block.No. == 2]
mean(conditioning.df$Result[conditioning.df$Block.No. == 2])
1:length(unique(conditioning.df$Block.No.)
for(i in 1:nrow(conditioning.df))) {
conditioning.df$Block_probability <- mean(conditioning.df$Result[conditioning.df$Block.No. == i])
}
for(i in 1:nrow(conditioning.df)) {
conditioning.df$Block_probability <- mean(conditioning.df$Result[conditioning.df$Block.No. == i])
}
for(i in 1:nrow(conditioning.df)) {
conditioning.df$Block_probability[conditioning.df$Block.No. == i] <- mean(conditioning.df$Result[conditioning.df$Block.No. == i])
}
table(conditioning.df$Block_probability)
xtabs(data = conditioning.df,formula = Block_probability ~ Block.No.)
ggplot(data = conditioning.df, x = Run.No., y = Block_probability) + geom_line()
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Run.No., y = Block_probability))
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability))
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light()
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability))
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 2)
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 2, shape = "triangle")
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 4, shape = "triangle")
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 2, shape = "triangle")
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle")
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Result, 1 = Y, 0 = N") + xlab("Run") + xlim(0,100) + geom_point(mapping = aes(x = Run.No., y = Result))
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,1) + ylim(0,10) + geom_vlinet(xintercept = 4.2)
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,1) + ylim(0,10) + geom_vline(xintercept = 4.2)
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2)
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 2)
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1.5)
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1)
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1) +
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1) +
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1)
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1) + scale_x_continuous(breaks = c(1:10))
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light() + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1) + scale_x_continuous(breaks = c(1:10)) + theme(panel.grid.minor.y = NULL)
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light()  + theme(panel.grid.minor.y = NULL) + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1) + scale_x_continuous(breaks = c(1:10))
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light()  + theme(panel.grid.minor.x = F) + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1) + scale_x_continuous(breaks = c(1:10))
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light()  + theme(panel.grid.minor.x = NULL) + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1) + scale_x_continuous(breaks = c(1:10))
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light()  + theme(panel.grid.minor.x = element_blank()) + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1) + scale_x_continuous(breaks = c(1:10))
seq(1:100,by = 10)
seq(from = 1, to = 100, by = 10)
glm(data = conditioning.df[seq(from = 1, to = 100, by = 10),], Block_probability ~ Block.No.)
glm(data = conditioning.df[seq(from = 1, to = 100, by = 10),], Block_probability ~ Block.No.,family = "binomial")
glm(data = conditioning.df, Result ~ Block.No.)
glm(data = conditioning.df, Result ~ Block.No.,family = "binomial")
ggplot(conditioning.df, aes(Block.No.,Result)) + stat_smooth(method="glm",family=binomial,formula = Block.No. ~ Result) + geom_point()
ggplot(conditioning.df, aes(Block.No.,Result)) + stat_smooth(method="glm",family=binomial,formula = y ~ x) + geom_point()
ggplot(Titanicp, aes(age, as.numeric(survived)-1, color=sex)) +
stat_smooth(method="glm", family=binomial, formula=y~x,
alpha=0.2, size=2, aes(fill=sex)) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr (survived)")
ggplot(Titanicp, aes(age, as.numeric(survived)-1, color=sex)) +
stat_smooth(method="glm", family=binomial, formula=y~x,
alpha=0.2, size=2, aes(fill=sex)) +
geom_point(position=position_jitter(height=0.03, width=0)) +
xlab("Age") + ylab("Pr (survived)")
ggplot(conditioning.df, aes(Block.No.,Result)) + stat_smooth(method="glm",family=binomial,formula = Block.No. ~ Result) + geom_point()
ggplot(conditioning.df, aes(Block.No.,Result)) + stat_smooth(method="glm",family=binomial,formula = Block.No. ~ Result) + geom_point()
ggplot(conditioning.df, aes(Block.No.,Result)) + stat_smooth(method="glm",family=binomial,formula = x ~ y) + geom_point()
ggplot(conditioning.df, aes(Block.No.,Result)) + stat_smooth(method="glm",family=binomial,formula = y ~ x) + geom_point()
ggplot(conditioning.df, aes(Block.No.,Result)) + stat_smooth(methods.args = list(method="glm",family=binomial,formula = y ~ x)) + geom_point()
glm(data = conditioning.df, Result ~ Block.No.,family = "binomial")
conditioning.glm <- glm(data = conditioning.df, Result ~ Block.No.,family = "binomial")
conditioning.glm$coefficients
conditioning.glm$R
conditioning.glm$contrasts
cast()
constrast(conditioning.df$Result)
contrasts(conditioning.df$Result)
View(conditioning.df)
conditioning.df$Result <- as.factor(conditioning.df$Result)
conditioning.glm <- glm(data = conditioning.df, Result ~ Block.No.,family = "binomial")
conditioning.glm
contrasts(conditioning.df$Result)
summary(conditioning.df)
summary(conditioning.glm)
stargazer(conditioning.glm)
library(stargazer)
stargazer(conditioning.glm)
library(knitr)
library(magrittr)
library(ggplot2)
library(dplyr)
library(tibble)
library(stargazer)
library(kableExtra)
opts_chunk$set(fig.width = 7)
opts_chunk$set(fig.height = 5)
opts_chunk$set(results = 'hold')
knitr::opts_chunk$set(echo = TRUE)
options(digits = 2)
stargazer(conditioning.glm)
stargazer(conditioning.glm)Show in New WindowClear OutputExpand/Collapse Output
% Table created by stargazer v.5.2.2 by Marek Hlavac, Harvard University. E-mail: hlavac at fas.harvard.edu
% Date and time: Mon, Aug 20, 2018 - 5:19:37 PM
\begin{table}[!htbp] \centering
\caption{}
\label{}
\begin{tabular}{@{\extracolsep{5pt}}lc}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{1}{c}{\textit{Dependent variable:}} \\
\cline{2-2}
\\[-1.8ex] & Result \\
\hline \\[-1.8ex]
Block.No. & 0.440$^{***}$ \\
& (0.100) \\
& \\
Constant & $-$1.400$^{***}$ \\
& (0.510) \\
& \\
\hline \\[-1.8ex]
Observations & 100 \\
Log Likelihood & $-$50.000 \\
Akaike Inf. Crit. & 104.000 \\
\hline
\hline \\[-1.8ex]
\textit{Note:}  & \multicolumn{1}{r}{$^{*}$p$<$0.1; $^{**}$p$<$0.05; $^{***}$p$<$0.01} \\
\end{tabular}
\end{table}
ConsoleC:/Users/Owner/Desktop/Working_directory/
Console
R Markdown
C:/Users/Owner/Desktop/Working_directory/
> conditioning.df$Result <- as.factor(conditioning.df$Result)
> conditioning.glm <- glm(data = conditioning.df, Result ~ Block.No.,family = "binomial")
> conditioning.glm
Call:  glm(formula = Result ~ Block.No., family = "binomial", data = conditioning.df)
Coefficients:
(Intercept)    Block.No.
-1.3820       0.4358
Degrees of Freedom: 99 Total (i.e. Null);  98 Residual
Null Deviance:	    125.4
Residual Deviance: 100.3 	AIC: 104.3
> contrasts(conditioning.df$Result)
1
0 0
1 1
> summary(conditioning.df)
Run.No.         Block.No.    Result  Session.No.   Block_probability
Min.   :  1.00   Min.   : 1.0   0:32   Min.   :1.00   Min.   :0.10
1st Qu.: 25.75   1st Qu.: 3.0   1:68   1st Qu.:1.00   1st Qu.:0.40
Median : 50.50   Median : 5.5          Median :2.00   Median :0.80
Mean   : 50.50   Mean   : 5.5          Mean   :1.58   Mean   :0.68
3rd Qu.: 75.25   3rd Qu.: 8.0          3rd Qu.:2.00   3rd Qu.:0.90
Max.   :100.00   Max.   :10.0          Max.   :2.00   Max.   :1.00
> summary(conditioning.glm)
Call:
glm(formula = Result ~ Block.No., family = "binomial", data = conditioning.df)
Deviance Residuals:
Min       1Q   Median       3Q      Max
-2.2873  -0.8099   0.3896   0.7521   1.5964
Coefficients:
Estimate Std. Error z value Pr(>|z|)
(Intercept)  -1.3820     0.5072  -2.725  0.00644 **
Block.No.     0.4358     0.1012   4.308 1.65e-05 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
(Dispersion parameter for binomial family taken to be 1)
Null deviance: 125.37  on 99  degrees of freedom
Residual deviance: 100.29  on 98  degrees of freedom
AIC: 104.29
Number of Fisher Scoring iterations: 4
> stargazer(conditioning.glm)
Error in stargazer(conditioning.glm) :
could not find function "stargazer"
> library(stargazer)
Please cite as:
Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
R package version 5.2.2. https://CRAN.R-project.org/package=stargazer
> stargazer(conditioning.glm)
% Table created by stargazer v.5.2.2 by Marek Hlavac, Harvard University. E-mail: hlavac at fas.harvard.edu
% Date and time: Mon, Aug 20, 2018 - 5:19:21 PM
\begin{table}[!htbp] \centering
\caption{}
\label{}
\begin{tabular}{@{\extracolsep{5pt}}lc}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{1}{c}{\textit{Dependent variable:}} \\
\cline{2-2}
\\[-1.8ex] & Result \\
\hline \\[-1.8ex]
Block.No. & 0.436$^{***}$ \\
& (0.101) \\
& \\
Constant & $-$1.382$^{***}$ \\
& (0.507) \\
& \\
\hline \\[-1.8ex]
Observations & 100 \\
Log Likelihood & $-$50.144 \\
Akaike Inf. Crit. & 104.289 \\
\hline
\hline \\[-1.8ex]
\textit{Note:}  & \multicolumn{1}{r}{$^{*}$p$<$0.1; $^{**}$p$<$0.05; $^{***}$p$<$0.01} \\
\end{tabular}
\end{table}
> library(knitr)
> library(magrittr)
> library(ggplot2)
> library(dplyr)
> library(tibble)
> library(stargazer)
> library(kableExtra)
> opts_chunk$set(fig.width = 7)
> opts_chunk$set(fig.height = 5)
> opts_chunk$set(results = 'hold')
> knitr::opts_chunk$set(echo = TRUE)
> options(digits = 2)
> stargazer(conditioning.glm)
% Table created by stargazer v.5.2.2 by Marek Hlavac, Harvard University. E-mail: hlavac at fas.harvard.edu
% Date and time: Mon, Aug 20, 2018 - 5:19:37 PM
\begin{table}[!htbp] \centering
\caption{}
\label{}
\begin{tabular}{@{\extracolsep{5pt}}lc}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{1}{c}{\textit{Dependent variable:}} \\
\cline{2-2}
\\[-1.8ex] & Result \\
\end{table}
> args(stargazer)
args(stargazer)
stargazer(conditioning.glm, align = T, type = "html", omit.stat = c("aic","bic","ll"))
conditioning.glm$coefficients
conditioning.glm$coefficients -> logistic.coefficients.vec
logistic.coefficients.vec
class(logistic.coefficients.vec)
type(logistic.coefficients.vec)
sort(unique(conditioning.df$Block.No.))
trial_logits <- logistic.coefficients.vec[1]*block_no + logistic.coefficients.vec[2]*block_no
block_no <- sort(unique(conditioning.df$Block.No.))
trial_logits <- logistic.coefficients.vec[1]*block_no + logistic.coefficients.vec[2]*block_no
plot(block_no,trial_logits)
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits))
plot(block_no,trial_probs)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*block_no
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits))
plot(block_no,trial_probs)
block_no <- seq(from = 0, to = 10, by = 0.01)
plot(block_no,trial_logits)
rm(block_no)
rm(trial_logits,trial_probs)
block_no <- seq(from = 0, to = 10, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*block_no #intercept + coefficient*trial no.
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function
plot(block_no,trial_logits)
plot(block_no,trial_probs)
logit_conditioning.df <- as.data.frame(cbind(block_no, trial_probs))
View(logit_conditioning.df)
ggplot(logit_conditioning.df, x = block_no, y = trial_probs) + geom_line()
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs))\ + geom_line()
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line()
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line() + theme_light()
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Block Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = c(1:10))
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Block Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = c(0:10))
conditioning.df$Result <- as.factor(conditioning.df$Result)
conditioning.glm <- glm(data = conditioning.df, Result ~ Block.No.,family = "binomial")
stargazer(conditioning.glm, align = T, type = "html", omit.stat = c("aic","bic","ll"))
conditioning.glm$coefficients -> logistic.coefficients.vec
#block_no <- sort(unique(conditioning.df$Block.No.))
block_no <- seq(from = 0, to = 10, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*block_no #intercept + coefficient*trial no.
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function
logit_conditioning.df <- as.data.frame(cbind(block_no, trial_probs))
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line() + theme_light()
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
stargazer(conditioning.glm, align = T, type = "html", omit.stat = c("aic","bic","ll"))
conditioning.glm$coefficients -> logistic.coefficients.vec
#block_no <- sort(unique(conditioning.df$Block.No.))
trial_no <- seq(from = 0, to = 100, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*block_no #intercept + coefficient*trial no.
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function
logit_conditioning.df <- as.data.frame(cbind(block_no, trial_probs))
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Trial Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = c(0:10))
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
stargazer(conditioning.glm, align = T, type = "html", omit.stat = c("aic","bic","ll"))
conditioning.glm$coefficients -> logistic.coefficients.vec
#block_no <- sort(unique(conditioning.df$Block.No.))
trial_no <- seq(from = 0, to = 100, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*block_no #intercept + coefficient*trial no.
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function
logit_conditioning.df <- as.data.frame(cbind(block_no, trial_probs))
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Trial Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = c(0:100))
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
stargazer(conditioning.glm, align = T, type = "html", omit.stat = c("aic","bic","ll"))
conditioning.glm$coefficients -> logistic.coefficients.vec
#block_no <- sort(unique(conditioning.df$Block.No.))
trial_no <- seq(from = 0, to = 100, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*block_no #intercept + coefficient*trial no.
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function
logit_conditioning.df <- as.data.frame(cbind(block_no, trial_probs))
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Trial Number") + ylab("Block Probability") + xlab("Block Number") + ylim(0,1) + scale_x_continuous(breaks = c(0:100))
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
stargazer(conditioning.glm, align = T, type = "html", omit.stat = c("aic","bic","ll"))
conditioning.glm$coefficients -> logistic.coefficients.vec
#block_no <- sort(unique(conditioning.df$Block.No.))
trial_no <- seq(from = 0, to = 100, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*trial_no #intercept + coefficient*trial no.
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function
logit_conditioning.df <- as.data.frame(cbind(block_no, trial_probs))
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Trial Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = c(0:10))
rm(logit_conditioning.df,trial_probs,trial_no,block_no,logistic.coefficients.vec)
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
stargazer(conditioning.glm, align = T, type = "html", omit.stat = c("aic","bic","ll"))
conditioning.glm$coefficients -> logistic.coefficients.vec
#block_no <- sort(unique(conditioning.df$Block.No.))
trial_no <- seq(from = 0, to = 100, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*trial_no #intercept + coefficient*trial no.
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function
logit_conditioning.df <- as.data.frame(cbind(block_no, trial_probs))
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Trial Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = c(0:10))
rm(logit_conditioning.df,trial_probs,trial_no,block_no,logistic.coefficients.vec)
rm(logit_conditioning.df,trial_probs,trial_no,block_no,logistic.coefficients.vec)
rm(logit_conditioning.df,trial_probs,trial_no,block_no,logistic.coefficients.vec)
rm(trial_logits)
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
stargazer(conditioning.glm, align = T, type = "html", omit.stat = c("aic","bic","ll"))
conditioning.glm$coefficients -> logistic.coefficients.vec
#block_no <- sort(unique(conditioning.df$Block.No.))
trial_no <- seq(from = 0, to = 100, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*trial_no #intercept + coefficient*trial no.
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function
logit_conditioning.df <- as.data.frame(cbind(trial_no, trial_probs))
ggplot(logit_conditioning.df, aes(x = block_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Trial Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = c(0:10))
conditioning.df <- read.csv("Conditioned_Reinforcer_session1.csv")
kable(conditioning.df) %>%
kable_styling("striped", full_width = T) %>%
scroll_box(width = "100%", height = "200px")
table(conditioning.df$Result)
table(conditioning.df$Session.No.)
conditioning.df$Result <- as.character(conditioning.df$Result)
conditioning.df$Result[conditioning.df$Result == "YES"] <- 1
conditioning.df$Result[conditioning.df$Result == "NO"] <- 0
conditioning.df$Block_probability <- conditioning.df$Block_probability
for(i in 1:nrow(conditioning.df)) {
conditioning.df$Block_probability[conditioning.df$Block.No. == i] <- mean(conditioning.df$Result[conditioning.df$Block.No. == i])
}
ggplot(data = conditioning.df) + geom_line(mapping = aes(x = Block.No., y = Block_probability)) + theme_light()  + theme(panel.grid.minor.x = element_blank()) + geom_point(mapping = aes(x = Block.No., y = Block_probability), size = 3, shape = "triangle") + labs(title = "Plot of Probability of Trial Success versus Block Number",subtitle = "Vertical red line indicates change in method (2nd session)",caption = "original data points overlaid") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + geom_vline(xintercept = 4.2,color = "red",lwd = 1) + scale_x_continuous(breaks = c(1:10))
View(conditioning.df)
conditioning.df$Block_probability <- conditioning.df$Block_probability
for(i in 1:nrow(conditioning.df)) {
conditioning.df$Block_probability[conditioning.df$Block.No. == i] <- mean(conditioning.df$Result[conditioning.df$Block.No. == i])
}
View(conditioning.df)
conditioning.df$Result <- as.numeric(conditioning.df$Result)
conditioning.df$Block_probability <- conditioning.df$Block_probability
for(i in 1:nrow(conditioning.df)) {
conditioning.df$Block_probability[conditioning.df$Block.No. == i] <- mean(conditioning.df$Result[conditioning.df$Block.No. == i])
}
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
stargazer(conditioning.glm, align = T, type = "html", omit.stat = c("aic","bic","ll"))
conditioning.glm$coefficients -> logistic.coefficients.vec
#block_no <- sort(unique(conditioning.df$Block.No.))
trial_no <- seq(from = 0, to = 100, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*trial_no #intercept + coefficient*trial no.
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function
logit_conditioning.df <- as.data.frame(cbind(trial_no, trial_probs))
ggplot(logit_conditioning.df, aes(x = trial_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Trial Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = c(0:10))
ggplot(logit_conditioning.df, aes(x = trial_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Trial Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = seq(from = 0, to = 100, by = 100))
ggplot(logit_conditioning.df, aes(x = trial_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Trial Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = seq(from = 0, to = 100, by = 10))
ggplot(logit_conditioning.df, aes(x = trial_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Plot of Logistic Regression of Trial Success versus Trial Number") + ylab("Probability of Trial Sucess") + xlab("Trial Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = seq(from = 0, to = 100, by = 10))
ggplot(logit_conditioning.df, aes(x = trial_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Logistic Regression of Trial Success versus Trial Number") + ylab("Block Probability") + xlab("Block Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = c(0:10))
ggplot(logit_conditioning.df, aes(x = trial_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Logistic Regression of Trial Success versus Trial Number") + ylab("Probability of Trial Sucess") + xlab("Trial Number") + xlim(0,10) + ylim(0,1) + scale_x_continuous(breaks = seq(from = 0, to = 100, by = 10))
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial",link ="logit")
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
summary(conditioning.glm)
rm(trial_no,trial_probs,logit_conditioning.df,trial_logits)
rm(trial_no,trial_probs,logit_conditioning.df,trial_logits,logistic.coefficients.vec)
conditioning.glm <- glm(data = conditioning.df, Result ~ Run.No.,family = "binomial")
stargazer(conditioning.glm, align = T, type = "html", omit.stat = c("aic","bic","ll"))
conditioning.glm$coefficients -> logistic.coefficients.vec
#block_no <- sort(unique(conditioning.df$Block.No.))
trial_no <- seq(from = 0, to = 100, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*trial_no #intercept + coefficient*trial no.
#this gives log(p/(1-p))
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function -> generates probabilities
# turning odds ration to probability: odds / 1 + odds
logit_conditioning.df <- as.data.frame(cbind(trial_no, trial_probs)) #binding x and y variables
ggplot(logit_conditioning.df, aes(x = trial_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Logistic Regression of Trial Success versus Trial Number") + ylab("Probability of Trial Sucess") + xlab("Trial Number") + xlim(0,100) + ylim(0,1) + scale_x_continuous(breaks = seq(from = 0, to = 100, by = 10))
rm(trial_no,trial_probs,logit_conditioning.df,trial_logits,logistic.coefficients.vec)
trial_no <- seq(from = -50, to = 200, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*trial_no #intercept + coefficient*trial no.
#this gives log(p/(1-p))
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function -> generates probabilities
# turning odds ration to probability: odds / 1 + odds
logit_conditioning.df <- as.data.frame(cbind(trial_no, trial_probs)) #binding x and y variables
ggplot(logit_conditioning.df, aes(x = trial_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Extrapolated Logistic Regression of Trial Success versus Run No.") + ylab("P(Trial Sucess)") + xlab("Trial") + xlim(-50,200) + ylim(0,1) + scale_x_continuous(breaks = seq(from = -50, to = 200, by = 10))
rm(trial_no,trial_probs,logit_conditioning.df,trial_logits,logistic.coefficients.vec)
conditioning.glm$coefficients -> logistic.coefficients.vec
trial_no <- seq(from = -50, to = 200, by = 0.01)
trial_logits <- logistic.coefficients.vec[1]+ logistic.coefficients.vec[2]*trial_no #intercept + coefficient*trial no.
#this gives log(p/(1-p))
trial_probs <- exp(trial_logits)/(1 + exp(trial_logits)) #normalising to between 0-1 -> link function -> generates probabilities
# turning odds ration to probability: odds / 1 + odds
logit_conditioning.df <- as.data.frame(cbind(trial_no, trial_probs)) #binding x and y variables
ggplot(logit_conditioning.df, aes(x = trial_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Extrapolated Logistic Regression of Trial Success versus Run No.") + ylab("P(Trial Sucess)") + xlab("Trial") + xlim(-50,200) + ylim(0,1) + scale_x_continuous(breaks = seq(from = -50, to = 200, by = 10))
rm(trial_no,trial_probs,logit_conditioning.df,trial_logits)
ggplot(logit_conditioning.df, aes(x = trial_no, y = trial_probs)) + geom_line() + theme_light() + theme(panel.grid.minor.x = element_blank()) + labs(title = "Extrapolated Logistic Regression of Trial Success versus Run No.") + ylab("P(Trial Sucess)") + xlab("Trial") + xlim(-100,200) + ylim(0,1) + scale_x_continuous(breaks = seq(from = -100, to = 200, by = 10))
par(mfrow = c(2,1))
library("gridExtra", lib.loc="~/R/win-library/3.4")
table(conditioning.df$Result)
x <- table(conditioning.df$Result)
names(x)
x
table(conditioning.df$Result) -> x %>% names() <- c("Trial Result","Frequency") %>% as.data.frame()
x <- as.data.frame(x)
x
